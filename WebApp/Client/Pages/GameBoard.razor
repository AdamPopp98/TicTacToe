@page "/GameBoard"

<h1>Game Board</h1>
<ul>
    <li>@tiles[0].GetValue()</li>
    <li>@tiles[1].GetValue()</li>
    <li>@tiles[2].GetValue()</li>
</ul>

<ul>
    <li>@tiles[3].GetValue()</li>
    <li>@tiles[4].GetValue()</li>
    <li>@tiles[5].GetValue()</li>
</ul>

<ul>
    <li>@tiles[6].GetValue()</li>
    <li>@tiles[7].GetValue()</li>
    <li>@tiles[8].GetValue()</li>
</ul>


@code {
    public List<TileModel> tiles;
    private readonly Char EmptySymbol = ' ';
    private Char CurSymbol = ' ';
    private string currentHeading = "Initial heading";
    private string newHeading;
    private string checkedMessage = "Not changed yet";

    protected override async Task OnInitializedAsync()
    {
        MakeBoard();
    }

    private void MakeBoard()
    {
        for (int i = 0; i < 8; i++)
        {
            var tile = new TileModel(i);
            tiles.Add(tile);
        }
    }

    private void DisplayBoard()
    {
        foreach (var tile in @tiles)
        {
            tile.GetValue();
        }
    }

    private void AddSymbol()
    {
        CurSymbol = newHeading[0];
    }

    private void UpdateHeading()
    {
        currentHeading = $"{newHeading}!!!";
    }

    private void CheckChanged()
    {
        checkedMessage = $"Last changed at {DateTime.Now}";
    }
}